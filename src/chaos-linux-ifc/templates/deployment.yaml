---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-linux-ifc
  namespace: {{ .Release.Namespace }}
  labels:
    component: chaos-linux-ifc
    app: chaos-linux-ifc
    {{- include "chaos-linux-ifc.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      component: chaos-linux-ifc
      app: chaos-linux-ifc
      {{- include "chaos-linux-ifc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: chaos-linux-ifc
        app: chaos-linux-ifc
        {{- include "chaos-linux-ifc.selectorLabels" . | nindent 8 }}
    spec:
      {{ include "chaos-linux-ifc.pullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "chaos-linux-ifc.serviceAccountName" . }}
      containers:
        - name: chaos-linux-ifc
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          command:
          - infrastructure-controller
          args:
          - -leader-elect=true
          env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: chaos-common-secret
            - configMapRef:
                name: chaos-linux-ifc-config
            - configMapRef:
                name: chaos-common-config        
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
              {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
      {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
      {{- end }}