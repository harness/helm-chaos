apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-web
  namespace: {{ .Release.Namespace }}
  labels:
    component: chaos-web
    app: chaos-web
    {{- include "chaos-web.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      component: chaos-web
      app: chaos-web
      {{- include "chaos-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: chaos-web
        app: chaos-web
        {{- include "chaos-web.selectorLabels" . | nindent 8 }}
    spec:
      {{ include "chaos-web.pullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "chaos-web.serviceAccountName" . }}
      containers:
        - name: chaos-web
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ENABLE_CDN
              value: '{{ .Values.enableCDN }}'
          ports:
            - containerPort: {{.Values.service.port}}
          resources:
              {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "cat remoteEntry.js"
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /remoteEntry.js
              port: {{.Values.service.port}}
            initialDelaySeconds: 10
            periodSeconds: 5
        {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
        {{- end }}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
      {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
      {{- end }}