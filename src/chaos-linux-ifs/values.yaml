# Default values for chaos-manager
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: "test@harness.io"
  airgap: false
  ha: false
  opa:
    enabled: false
  cd:
    # -- Enable to install CD
    enabled: true
  # Enable if using ingress objects
  ingress:
    enabled: true
    loadBalancerIP: '0.0.0.0'
    className: "harness"
    loadBalancerEnabled: true
    hosts:
      - ''
    tls:
      enabled: false
      secretName: harness-ssl
    nginx:
      # -- Create Nginx Controller.  True will deploy a controller into your cluster
      create: true
    defaultbackend:
      # -- Create will deploy a default backend into your cluster
      create: true

## Platform Settings
platform:
  harness-manager:
    featureFlags:
      OPA: "OPA_PIPELINE_GOVERNANCE"
      ADDITIONAL: "CHAOS_ENABLED"

replicaCount: 2
maxSurge: 1
maxUnavailable: 0

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []

image:
  registry: docker.io
  #repository: chaosnative/harness-smp-chaos-delegate-server
  repository: chaosnative/harness-smp-chaos-linux-infra-server
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.11.0"
  digest: ""
  #imagePullSecrets: ["chaos-regcred-secret"]

probeSourceImage:
  image:
    registry: docker.io
    repository: chaosnative/source-probe
    tag: "ci"
  
configmap: {}

mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "chaos-linux-ifs-sa"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  #runAsUser: 65534
  #runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4000
  targetport: 4000
  grpcport: 5000
  grpctargetport: 5000

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling: {}
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 2
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
