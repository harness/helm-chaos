apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-linux-ifs
  namespace: {{ .Release.Namespace }}
  labels:
    component: chaos-linux-ifs
    app: chaos-linux-ifs
    {{- include "chaos-linux-ifs.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      component: chaos-linux-ifs
      app: chaos-linux-ifs
      {{- include "chaos-linux-ifs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: chaos-linux-ifs
        app: chaos-linux-ifs
        {{- include "chaos-linux-ifs.selectorLabels" . | nindent 8 }}
    spec:
      {{ include "chaos-linux-ifs.pullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "chaos-linux-ifs.serviceAccountName" . }}
      {{- if .Values.global.database.mongo.installed }}
      initContainers:
      - name: wait-for-mongo
        image: {{ include "common.images.image" (dict "imageRoot" .Values.waitForInitContainer.image "global" .Values.global) }}
        imagePullPolicy: IfNotPresent
        args:
          - "pod"
          - "-lapp=mongodb-replicaset"
      {{- end }}
      containers:
        - name: chaos-linux-ifs
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          envFrom:
            - secretRef:
                name: chaos-common-secret
            - configMapRef:
                name: chaos-common-config
            - configMapRef:
                name: chaos-linux-ifs-config         
          env:
          - name: PROBE_SOURCE_IMAGE
            valueFrom:
              configMapKeyRef:
                name: chaos-linux-ifs-config      
                key:  PROBE_SOURCE_IMAGE 
          - name: LOG_SERVICE_ENABLED
            value: "true"    

          - name: PROBE_SERVICE_ACCOUNT_NAME
            value: {{ include "chaos-linux-ifs.serviceAccountName" . }}

          - name: CHAOS_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace

          - name: DB_SERVER
            value: {{ include "harnesscommon.database.mongo" (dict "database" "chaos-harness" "context" $) }}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mongoSecrets.userName.name }}
                key: {{ .Values.mongoSecrets.userName.key }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mongoSecrets.password.name }}
                key: {{ .Values.mongoSecrets.password.key }}
          - name: MONGODB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mongoSecrets.userName.name }}
                key: {{ .Values.mongoSecrets.userName.key }}
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mongoSecrets.password.name }}
                key: {{ .Values.mongoSecrets.password.key }}
          ports:
            - containerPort: {{.Values.service.port}}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          resources:
              {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
      {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
      {{- end }}